import pygame, sys
import numpy as np

from pygame.locals import *

pygame.init()
mainClock = pygame.time.Clock()

screen_size = (600,600)
screen = pygame.display.set_mode(screen_size)

white = (255,255,255)
gray = (120,120,120)
black = (0,0,0)

myfont = pygame.font.Font(None,20)

# -- Variables

# OUR GRID MAP:
cellMAP = np.random.randint(2, size=(6, 6))

_vars = {
  'cellsize': 20,
  'isoGridOrigin': [50,400]}

# -- Functions

def cartToIso(point):
    isoX = point[0] - point[1]
    isoY = (point[0] + point[1])/2
    return [isoX+30, isoY]

def IsoTiles(cellMAP):
    tileDim = 20
    origin = (50,400)
    originX, originY = 20, 500

    for row in range(cellMAP.shape[0]):
        for column in range(cellMAP.shape[1]):
            if cellMAP[column][row] == 1:
                tilePoints = [cartToIso([originX + (20 * row),
                                         originY + (20 * column)]),
                              cartToIso([originX + (20 * (row + 1)),
                                         originY + (20 * column)]),
                              cartToIso([originX + (20 * (row + 1)),
                                         originY + (20 * (column + 1))]),
                              cartToIso([originX + (20 * row),
                                         originY + (20 * (column + 1))])
                              ]

                return tilePoints

def createTileList(origin_x,origin_y):
    cart_a = (origin_x,origin_y)
    cart_b = (origin_x+20,origin_y)
    cart_c = (origin_x+20,origin_y+20)
    cart_d = (origin_x,origin_y+20)
    iso_a = cartToIso(cart_a)
    iso_b = cartToIso(cart_b)
    iso_c = cartToIso(cart_c)
    iso_d = cartToIso(cart_d)
    return[iso_a,iso_b,iso_c,iso_d]

origin_list = []
for i in range(20):
    for j in range(20):
        origin_list.append((i*15+300,300-j*15))

isoTileList = []
for i in range(len(origin_list)):
    isoTileList.append(createTileList(origin_list[i][0],origin_list[i][1]))

print(origin_list)
print(isoTileList)

run = True
while run:

    screen.fill(black)

    for tile in isoTileList:
        pygame.draw.polygon(screen,gray,tile)

    for event in pygame.event.get():

        if event.type == pygame.QUIT:
            run = False
            pygame.quit()
            sys.exit()

    pygame.display.update()
    mainClock.tick(1)
